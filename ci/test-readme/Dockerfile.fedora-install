# Copyright 2019 Google LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

ARG DISTRO_VERSION=29
FROM fedora:${DISTRO_VERSION}
MAINTAINER "Carlos O'Ryan <coryan@google.com>"

# Please keep the formatting in these commands, it is optimized to cut & paste
# into the README.md file.

# We need the "Extra Packages for Enterprise Linux" for cmake3
RUN dnf makecache && \
    dnf install -y automake cmake gcc-c++ git grpc-devel grpc-plugins \
        libcurl-devel make openssl-devel pkgconfig protobuf-compiler tar wget \
        which zlib-devel

ARG CXX=g++
ARG CC=gcc

# Install Crc32c library.
WORKDIR /var/tmp/build
RUN wget -q https://github.com/google/crc32c/archive/1.0.6.tar.gz
RUN tar -xf 1.0.6.tar.gz
WORKDIR /var/tmp/build/crc32c-1.0.6
RUN cmake \
      -DCMAKE_BUILD_TYPE=Release \
      -DBUILD_SHARED_LIBS=yes \
      -DCRC32C_BUILD_TESTS=OFF \
      -DCRC32C_BUILD_BENCHMARKS=OFF \
      -DCRC32C_USE_GLOG=OFF \
      -H. -B.build/crc32c
RUN cmake --build .build/crc32c --target install -- -j $(nproc)
RUN ldconfig

# Verify that we can compile google-cloud-cpp using the pre-installed
# dependencies. Note how this assumes that `docker build` is running at the top
# level directory of google-cloud-cpp, e.g.:
#    cd google-cloud-cpp
#    docker build -f ci/test-reader/Dockerfile.centos-install .
WORKDIR /var/tmp/build/google-cloud-cpp
COPY . /var/tmp/build/google-cloud-cpp
RUN cmake -H. -Bbuild-output \
    -DGOOGLE_CLOUD_CPP_DEPENDENCY_PROVIDER=package \
    -DGOOGLE_CLOUD_CPP_PROTOBUF_PROVIDER=pkg-config \
    -DGOOGLE_CLOUD_CPP_GRPC_PROVIDER=pkg-config \
    -DGOOGLE_CLOUD_CPP_GMOCK_PROVIDER=external
RUN cmake --build build-output -- -j $(nproc)
WORKDIR /var/tmp/build/google-cloud-cpp/build-output
RUN ctest --output-on-failure
RUN cmake --build . --target install
